name: Code Quality

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  quality-check:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy, rustfmt, llvm-tools-preview
    
    - name: Cache cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libssl-dev libpq-dev
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Check documentation
      run: cargo doc --no-deps --all-features
    
    - name: Check for missing documentation
      run: |
        cargo doc --no-deps --all-features --document-private-items
        if ! cargo doc --no-deps --all-features --document-private-items 2>&1 | grep -q "warning: missing documentation"; then
          echo "✅ All public items are documented"
        else
          echo "❌ Some public items are missing documentation"
          cargo doc --no-deps --all-features --document-private-items 2>&1 | grep "warning: missing documentation" || true
          exit 1
        fi

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - name: Install cargo-audit
      run: cargo install cargo-audit
    - name: Run security audit
      run: cargo audit

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - name: Install cargo-outdated
      run: cargo install cargo-outdated
    - name: Check for outdated dependencies
      run: cargo outdated --exit-code 1

  license-check:
    name: License Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - name: Install cargo-license
      run: cargo install cargo-license
    - name: Check licenses
      run: cargo license --json > licenses.json
    - name: Display licenses
      run: cargo license
